{"version":3,"sources":["src/diff.js","src/component.js","src/index.js"],"names":["diff","renderComponent","dom","vnode","container","ret","diffNode","parentNode","appendChild","out","undefined","String","nodeType","textContent","document","createTextNode","replaceChild","tag","diffComponent","isSameNodeType","createElement","childNodes","map","children","length","diffChildren","diffAttributes","createComponent","component","props","inst","prototype","render","Component","constructor","setComponentProps","base","componentWillMount","componentWillReceiveProps","unmountComponent","componentWillUnmount","removeNode","renderer","componentWillUpdate","componentDidUpdate","componentDidMount","_component","curDom","oldDom","attrs","setAttribute","name","value","test","toLowerCase","style","cssText","removeAttribute","old","i","attributes","attr","vchildren","domChildren","console","log","keyed","child","key","push","min","childrenLen","vchild","j","c","former","nextSibling","insertBefore","nodeName","removeChild","state","stateChange","Object","assign","module","exports","React","reactDom","TText","Tbutton","Counter","num","setState","onClick","element","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAEwBA;QAwGRC,kBAAAA;;AA1GhB;;;;;;;;AAEe,SAASD,IAAT,CAAcE,GAAd,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAqC;AAClD,MAAMC,MAAMC,SAASJ,GAAT,EAAcC,KAAd,CAAZ;AACA;AACA,MAAIC,aAAaC,IAAIE,UAAJ,KAAmBH,SAApC,EAA+C;AAC7CA,cAAUI,WAAV,CAAsBH,GAAtB;AACD;AACD,SAAOA,GAAP;AACD;;AAED;AACA;AACA;AACA,SAASC,QAAT,CAAkBJ,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,MAAIM,MAAMP,GAAV,CAD4B,CACd;;AAEd,MAAIC,UAAUO,SAAV,IAAuBP,UAAU,IAAjC,IAAyC,OAAOA,KAAP,KAAiB,SAA9D,EAAyEA,QAAQ,EAAR;;AAEzE,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+BA,QAAQQ,OAAOR,KAAP,CAAR;;AAE/B;AACA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B;AACA,QAAID,OAAOA,IAAIU,QAAJ,KAAiB,CAA5B,EAA+B;AAC7B,UAAIV,IAAIW,WAAJ,KAAoBV,KAAxB,EAA+B;AAC7BD,YAAIW,WAAJ,GAAkBV,KAAlB;AACD;AACF,KAJD,MAIO;AACL;AACAM,YAAMK,SAASC,cAAT,CAAwBZ,KAAxB,CAAN;AACA,UAAID,OAAOA,IAAIK,UAAf,EAA2B;AACzBL,YAAIK,UAAJ,CAAeS,YAAf,CAA4BP,GAA5B,EAAiCP,GAAjC;AACD;AACF;AACD,WAAOO,GAAP;AACD;;AAED;AACA,MAAI,OAAON,MAAMc,GAAb,KAAqB,UAAzB,EAAqC;AACnC;AACA;AACA,WAAOC,cAAchB,GAAd,EAAmBC,KAAnB,CAAP;AACD;;AAED;AACA,MAAI,CAACD,GAAD,IAAQ,CAACiB,eAAejB,GAAf,EAAoBC,KAApB,CAAb,EAAyC;AACvCM,UAAMK,SAASM,aAAT,CAAuBjB,MAAMc,GAA7B,CAAN;AACA;AACA,QAAIf,GAAJ,EAAS;AACP,mCAAIA,IAAImB,UAAR,GAAoBC,GAApB,CAAwBb,IAAID,WAA5B;AACA,UAAIN,IAAIK,UAAR,EAAoB;AAClB;AACAL,YAAIK,UAAJ,CAAeS,YAAf,CAA4BP,GAA5B,EAAiCP,GAAjC;AACD;AACF;AACF;;AAED;AACA,MAAIC,MAAMoB,QAAN,IAAkBpB,MAAMoB,QAAN,CAAeC,MAAf,GAAwB,CAA1C,IAAgDf,IAAIY,UAAJ,IAAkBZ,IAAIY,UAAJ,CAAeG,MAAf,GAAwB,CAA9F,EAAkG;AAChG;AACAC,iBAAahB,GAAb,EAAkBN,MAAMoB,QAAxB;AACD;;AAEDG,iBAAejB,GAAf,EAAoBN,KAApB;AACA;AACA,SAAOM,GAAP;AACD;;AAED;AACA,SAASkB,eAAT,CAAyBC,SAAzB,EAAoCC,KAApC,EAA2C;AACzC,MAAIC,aAAJ;AACA,MAAIF,UAAUG,SAAV,IAAuBH,UAAUG,SAAV,CAAoBC,MAA/C,EAAuD;AACnD;AACAF,WAAO,IAAIF,SAAJ,CAAcC,KAAd,CAAP;AACH,GAHD,MAGO;AACH;AACAC,WAAO,IAAIG,mBAAJ,CAAcJ,KAAd,CAAP;AACAC,SAAKI,WAAL,GAAmBN,SAAnB;AACAE,SAAKE,MAAL,GAAc,YAAW;AACrB,aAAO,KAAKE,WAAL,CAAiBL,KAAjB,CAAP;AACH,KAFD;AAGH;AACD,SAAOC,IAAP;AACD;;AAED;AACA,SAASK,iBAAT,CAA2BP,SAA3B,EAAsCC,KAAtC,EAA6C;AAC3C,MAAG,CAACD,UAAUQ,IAAd,EAAoB;AAChB,QAAIR,UAAUS,kBAAd,EAAkC;AAC9BT,gBAAUS,kBAAV;AACH,KAFD,MAEO,IAAIT,UAAUU,yBAAd,EAAyC;AAC5CV,gBAAUU,yBAAV,CAAoCT,KAApC;AACH;AACJ;;AAEDD,YAAUC,KAAV,GAAkBA,KAAlB;AACA;AACA5B,kBAAgB2B,SAAhB;AACD;;AAED,SAASW,gBAAT,CAA0BX,SAA1B,EAAqC;AACnC,MAAIA,UAAUY,oBAAd,EAAoCZ,UAAUY,oBAAV;AACpCC,aAAWb,UAAUQ,IAArB;AACD;;AAEM,SAASnC,eAAT,CAAyB2B,SAAzB,EAAoC;AACzC,MAAIQ,aAAJ;AACA;AACA,MAAMM,WAAWd,UAAUI,MAAV,EAAjB;AACA;AACA,MAAIJ,UAAUQ,IAAV,IAAkBR,UAAUe,mBAAhC,EAAqD;AACjDf,cAAUe,mBAAV;AACH;;AAED;AACAP,SAAO9B,SAASsB,UAAUQ,IAAnB,EAAyBM,QAAzB,CAAP;;AAEA;AACA,MAAId,UAAUQ,IAAd,EAAoB;AAChB,QAAIR,UAAUgB,kBAAd,EAAkC;AAAEhB,gBAAUgB,kBAAV;AAAiC;AACxE,GAFD,MAEO,IAAIhB,UAAUiB,iBAAd,EAAiC;AACpCjB,cAAUiB,iBAAV;AACH;;AAEDjB,YAAUQ,IAAV,GAAiBA,IAAjB;AACAA,OAAKU,UAAL,GAAkBlB,SAAlB;AACD;;AAED;AACA,SAASV,aAAT,CAAuBhB,GAAvB,EAA4BC,KAA5B,EAAmC;AACjC,MAAI4C,SAAS7C,OAAOA,IAAI4C,UAAxB;AACA,MAAIE,SAAS9C,GAAb;AACA;AACA,MAAI6C,UAAUA,OAAOb,WAAP,KAAuB/B,MAAMc,GAA3C,EAAgD;AAC9C;AACAkB,sBAAkBY,MAAlB,EAA0B5C,MAAM8C,KAAhC;AACA/C,UAAM6C,OAAOX,IAAb,CAH8C,CAG5B;AACnB,GAJD,MAIO;AACL;AACA;AACA,QAAIW,MAAJ,EAAY;AACVR,uBAAiBQ,MAAjB;AACAC,eAAS,IAAT;AACD;AACD;AACAD,aAASpB,gBAAgBxB,MAAMc,GAAtB,EAA2Bd,MAAM8C,KAAjC,CAAT;;AAEAd,sBAAkBY,MAAlB,EAA0B5C,MAAM8C,KAAhC;AACA;AACA/C,UAAM6C,OAAOX,IAAb;;AAEA,QAAIY,UAAU9C,QAAQ8C,MAAtB,EAA8B;AAC5BA,aAAOF,UAAP,GAAoB,IAApB;AACAL,iBAAWO,MAAX;AACD;AACF;AACD,SAAO9C,GAAP;AACD;;AAED,SAASgD,YAAT,CAAsBhD,GAAtB,EAA2BiD,IAA3B,EAAiCC,KAAjC,EAAwC;AACtC;AACA,MAAID,SAAS,WAAb,EAA0BA,OAAO,OAAP;;AAE1B;AACA,MAAI,QAAQE,IAAR,CAAaF,IAAb,CAAJ,EAAwB;AACpBA,WAAOA,KAAKG,WAAL,EAAP;AACApD,QAAIiD,IAAJ,IAAYC,SAAS,EAArB;AACJ;AACC,GAJD,MAIO,IAAID,SAAS,OAAb,EAAsB;AACzB,QAAI,CAACC,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACrClD,UAAIqD,KAAJ,CAAUC,OAAV,GAAoBJ,SAAS,EAA7B;AACH,KAFD,MAEO,IAAIA,SAAS,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAA9B,EAAwC;AAC3C,WAAK,IAAID,KAAT,IAAiBC,KAAjB,EAAwB;AACpB;AACAlD,YAAIqD,KAAJ,CAAUJ,KAAV,IAAkB,OAAOC,MAAMD,KAAN,CAAP,KAAuB,QAAvB,GAAkCC,MAAMD,KAAN,IAAc,IAAhD,GAAuDC,MAAMD,KAAN,CAAzE;AACH;AACJ;AACL;AACC,GAVM,MAUA;AACH,QAAIA,QAAQjD,GAAZ,EAAiB;AACbA,UAAIiD,IAAJ,IAAYC,SAAS,EAArB;AACH;AACD,QAAIA,KAAJ,EAAW;AACPlD,UAAIgD,YAAJ,CAAiBC,IAAjB,EAAuBC,KAAvB;AACH,KAFD,MAEO;AACHlD,UAAIuD,eAAJ,CAAoBN,IAApB,EAA0BC,KAA1B;AACH;AACJ;AACF;;AAED;AACA,SAAS1B,cAAT,CAAwBxB,GAAxB,EAA6BC,KAA7B,EAAoC;AAClC,MAAMuD,MAAM,EAAZ,CADkC,CACnB;AACf,MAAMT,QAAQ9C,MAAM8C,KAApB;AACA,OAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAIzD,IAAI0D,UAAJ,CAAepC,MAAnC,EAA2CmC,GAA3C,EAAgD;AAC9C,QAAME,OAAO3D,IAAI0D,UAAJ,CAAeD,CAAf,CAAb;AACAD,QAAIG,KAAKV,IAAT,IAAiBU,KAAKT,KAAtB;AACD;;AAED,OAAI,IAAID,IAAR,IAAgBO,GAAhB,EAAqB;AACnB,QAAI,EAAEP,QAAQF,KAAV,CAAJ,EAAsB;AACpBC,mBAAahD,GAAb,EAAkBiD,IAAlB,EAAwBzC,SAAxB;AACD;AACF;;AAED,OAAI,IAAIyC,MAAR,IAAgBF,KAAhB,EAAuB;AACrB,QAAIS,IAAIP,MAAJ,MAAcF,MAAME,MAAN,CAAlB,EAA+B;AAC7BD,mBAAahD,GAAb,EAAkBiD,MAAlB,EAAwBF,MAAME,MAAN,CAAxB;AACD;AACF;AACF;;AAED;AACA,SAAS1B,YAAT,CAAsBvB,GAAtB,EAA2B4D,SAA3B,EAAsC;AACpC,MAAMC,cAAc7D,IAAImB,UAAxB,CADoC,CACD;AACnC2C,UAAQC,GAAR,CAAYF,WAAZ;AACA,MAAMxC,WAAW,EAAjB;AACA,MAAM2C,QAAQ,EAAd,CAJoC,CAInB;;AAEjB;AACA,MAAIH,YAAYvC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,SAAK,IAAImC,IAAI,CAAb,EAAgBA,IAAII,YAAYvC,MAAhC,EAAwCmC,GAAxC,EAA6C;AACzC,UAAMQ,QAAQJ,YAAYJ,CAAZ,CAAd;AACA;AACA,UAAMS,MAAMD,MAAMC,GAAlB;AACA,UAAIA,GAAJ,EAAS;AACLF,cAAME,GAAN,IAAaD,KAAb,CADK,CACc;AACtB,OAFD,MAEO;AACH5C,iBAAS8C,IAAT,CAAcF,KAAd,EADG,CACkB;AACxB;AACJ;AACF;;AAED;AACA,MAAIL,aAAaA,UAAUtC,MAAV,GAAmB,CAApC,EAAuC;AACrC,QAAI8C,MAAM,CAAV;AACA,QAAIC,cAAchD,SAASC,MAA3B,CAFqC,CAEH;;AAElC;AACA,SAAK,IAAImC,KAAI,CAAb,EAAgBA,KAAIG,UAAUtC,MAA9B,EAAsCmC,IAAtC,EAA4C;AAC1C,UAAMa,SAASV,UAAUH,EAAV,CAAf,CAD0C,CACd;AAC5B,UAAMS,OAAMI,OAAOJ,GAAnB;AACA,UAAID,eAAJ,CAH0C,CAG/B;AACX;AACA,UAAIC,IAAJ,EAAS;AACP;AACA,YAAIF,MAAME,IAAN,CAAJ,EAAgB;AACdD,mBAAQD,MAAME,IAAN,CAAR;AACAF,gBAAME,IAAN,IAAa1D,SAAb;AACD;AACF,OAND,MAMO,IAAI4D,MAAMC,WAAV,EAAuB;AAC5B;AACA,aAAI,IAAIE,IAAIH,GAAZ,EAAiBG,IAAIF,WAArB,EAAkCE,GAAlC,EAAuC;AACrC,cAAIC,IAAInD,SAASkD,CAAT,CAAR;AACA;AACA,cAAIC,KAAKvD,eAAeuD,CAAf,EAAkBF,MAAlB,CAAT,EAAoC;AAClCL,qBAAQO,CAAR;AACAnD,qBAASkD,CAAT,IAAc/D,SAAd;AACA,gBAAI+D,MAAMF,cAAc,CAAxB,EAA2BA,cAHO,CAGO;AACzC,gBAAIE,MAAMH,GAAV,EAAeA,MAJmB,CAIb;AACrB;AACD;AACF;AACF;AACD;AACAH,eAAQ7D,SAAS6D,MAAT,EAAgBK,MAAhB,CAAR;AACA;AACA,UAAMG,SAASZ,YAAYJ,EAAZ,CAAf;;AAEA;AACA,UAAIQ,UAASA,WAAUjE,GAAnB,IAA0BiE,WAAUQ,MAAxC,EAAgD;AAC9C,YAAI,CAACA,MAAL,EAAa;AACX;AACAzE,cAAIM,WAAJ,CAAgB2D,MAAhB;AACD,SAHD,MAGO,IAAIA,WAAUQ,OAAOC,WAArB,EAAkC;AACvC;AACAnC,qBAAWkC,MAAX;AACD,SAHM,MAGA;AACL;AACAzE,cAAI2E,YAAJ,CAAiBV,MAAjB,EAAwBQ,MAAxB;AACD;AACF;AACF;AACF;AACF;;AAED,SAASxD,cAAT,CAAwBjB,GAAxB,EAA6BC,KAA7B,EAAoC;AAClC;AACA,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AAC1D,WAAOD,IAAIU,QAAJ,KAAiB,CAAxB;AACD;AACD;AACA,MAAI,OAAOT,MAAMc,GAAb,KAAqB,QAAzB,EAAmC;AACjC,WAAOf,IAAI4E,QAAJ,CAAaxB,WAAb,OAA+BnD,MAAMc,GAAN,CAAUqC,WAAV,EAAtC;AACD;AACD;AACA,SAAOpD,OAAOA,IAAI4C,UAAX,IAAyB5C,IAAI4C,UAAJ,CAAeZ,WAAf,KAA+B/B,MAAMc,GAArE;AACD;;AAED,SAASwB,UAAT,CAAoBvC,GAApB,EAAyB;AACvB,MAAIA,OAAOA,IAAIK,UAAf,EAA2B;AACzBL,QAAIK,UAAJ,CAAewE,WAAfhTD;;;;AACA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAMoF,QAAQ;AACVlE,gCADU;AAEVa;AAFU,CAAd;;AAKA,SAASb,aAAT,CAAuBH,GAAvB,EAA4BgC,KAA5B,EAAgD;AAAA,sCAAV1B,QAAU;AAAVA,gBAAU;AAAA;;AAC5C,WAAO;AACHN,gBADG;AAEHgC,oBAFG;AAGH1B;AAHG,KAAP;AAKH;;AAED;AACA;;AAEA,IAAMgE,WAAW;AACbvD;AADa,CAAjB;;AAIA,SAASA,MAAT,CAAgB7B,KAAhB,EAAuBC,SAAvB,EAAkCF,GAAlC,EAAuC;AACnC;AACA;;AAEA;AACA,WAAO,oBAAKA,GAAL,EAAUC,KAAV,EAAiBC,SAAjB,CAAP;AACH;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;IACMoF;;;;;;;;;;;iCACO;AACL,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA;AAAA;AAAA;AAFJ,aADJ;AAMH;;;;EAReF,MAAMrD;;IAWpBwD;;;;;;;;;;;iCACO;AACL,mBACI;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH;;;;EALiBH,MAAMrD;;IAQtByD;;;AACF,qBAAa7D,KAAb,EAAqB;AAAA;;AAAA,uHACVA,KADU;;AAEjB,eAAKmD,KAAL,GAAa;AACTW,iBAAK;AADI,SAAb;AAFiB;AAKpB;;;;8CAEqB;AAClB3B,oBAAQC,GAAR,CAAa,QAAb;AACH;;;6CAEoB;AACjBD,oBAAQC,GAAR,CAAa,OAAb;AACH;;;kCAES;AACN,iBAAK2B,QAAL,CAAe,EAAED,KAAK,KAAKX,KAAL,CAAWW,GAAX,GAAiB,CAAxB,EAAf;AACH;;;iCAEQ;AAAA;;AACL,mBACI;AAAA;AAAA,kBAAK,SAAU;AAAA,+BAAM,OAAKE,OAAL,EAAN;AAAA,qBAAf;AACI,oCAAC,KAAD,OADJ;AAEI;AAAA;AAAA;AAAA;AAAa,yBAAKb,KAAL,CAAWW;AAAxB,iBAFJ;AAGI,oCAAC,OAAD;AAHJ,aADJ;AAOH;;;;EA5BiBL,MAAMrD;;AA+B5B,IAAI6D,UAAU;AAAC,WAAD;AAAA;AAAS;AAAA;AAAA;AAAA;AAAA;AAAT,CAAd;AACAP,SAASvD,MAAT,CACI8D,OADJ,EAEIhF,SAASiF,cAAT,CAAwB,MAAxzIA;;;;IAEM9D;AACJ,uBAAwB;AAAA,QAAZJ,KAAY,uEAAJ,EAAI;;AAAA;;AACtB,SAAKmD,KAAL,GAAa,EAAb;AACA,SAAKnD,KAAL,GAAaA,KAAb;AACD;;;;6BAEQoD,aAAa;AACpBC,aAAOC,MAAP,CAAc,KAAKH,KAAnB,EAA0BC,WAA1B;AACA,iCAAgB,IAAhB;AACD;;;;;;AAGHG,OAAOC,OAAP,GAAiBpD,SAAjB","file":"src.a305dcc1.map","sourceRoot":"..","sourcesContent":["import Component from './component'\n\nexport default function diff(dom, vnode, container) {\n  const ret = diffNode(dom, vnode)\n  // 这里是把计算完的真实dom的结果添加到视图当中\n  if (container && ret.parentNode !== container) {\n    container.appendChild(ret)\n  }\n  return ret\n}\n\n// diff算法 比较两颗dom树 返回更新后的新树\n// 两个参数 dom为当前dom结构 vnode是重新计算出来的虚拟dom结构\n// 返回新的dom结构\nfunction diffNode(dom, vnode) {\n  let out = dom // 最终返回的dom结构\n\n  if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = ''\n\n  if (typeof vnode === 'number') vnode = String(vnode)\n\n  // 判断当前节点是不是文本节点\n  if (typeof vnode === 'string') {\n    // 如果原节点也是文本节点就直接替换\n    if (dom && dom.nodeType === 3) {\n      if (dom.textContent !== vnode) {\n        dom.textContent = vnode\n      }\n    } else {\n      // 否则就直接替换该节点\n      out = document.createTextNode(vnode)\n      if (dom && dom.parentNode) {\n        dom.parentNode.replaceChild(out, dom)\n      }\n    }\n    return out\n  }\n\n  // 如果该节点是组件\n  if (typeof vnode.tag === 'function') {\n    // 这里之所以能直接return 是因为最外层永远只有一个标签 组件内部的children在递归的时候就会往下走\n    // 即使children里面有组件 return的时候也是回到处理children的阶段\n    return diffComponent(dom, vnode)\n  }\n\n  // 如果该节点是正常dom\n  if (!dom || !isSameNodeType(dom, vnode)) {\n    out = document.createElement(vnode.tag)\n    // 如果当前位置存在节点的话 就把节点的子节点全部转移到新的dom节点上 这里保证了同层比较\n    if (dom) {\n      [...dom.childNodes].map(out.appendChild)\n      if (dom.parentNode) {\n        // 把dom替代成out\n        dom.parentNode.replaceChild(out, dom)\n      }\n    }\n  }\n\n  // 只要有子节点就要比较一下子节点是否发生变化\n  if (vnode.children && vnode.children.length > 0 || (out.childNodes && out.childNodes.length > 0)) {\n    // out为当前节点的标签 vnode是当前节点的ast\n    diffChildren(out, vnode.children);\n  }\n\n  diffAttributes(out, vnode)\n  // 直接返回修改后的dom\n  return out\n}\n\n// 创建Component component为组件的tag，即组件的构造函数\nfunction createComponent(component, props) {\n  let inst;\n  if (component.prototype && component.prototype.render) {\n      // 如果已经创建 则重新传递props\n      inst = new component(props)\n  } else {\n      // 没有就new一个新的组件\n      inst = new Component(props)\n      inst.constructor = component\n      inst.render = function() {\n          return this.constructor(props)\n      }\n  }\n  return inst\n}\n\n// 设置组件的props 跑两个生命周期\nfunction setComponentProps(component, props) {\n  if(!component.base) {\n      if (component.componentWillMount) {\n          component.componentWillMount()\n      } else if (component.componentWillReceiveProps) {\n          component.componentWillReceiveProps(props)\n      }\n  }\n\n  component.props = props\n  // 获取真实的dom结构\n  renderComponent(component)\n}\n\nfunction unmountComponent(component) {\n  if (component.componentWillUnmount) component.componentWillUnmount();\n  removeNode(component.base);\n}\n\nexport function renderComponent(component) {\n  let base;\n  // 提取render方法 render返回dom结构 被babel转成对应的ast\n  const renderer = component.render()\n  // 存在base的才触发\n  if (component.base && component.componentWillUpdate) {\n      component.componentWillUpdate()\n  }\n\n  // 对组件进行递归遍历 深度遍历 同时进行更新\n  base = diffNode(component.base, renderer)\n\n  // 如果组件已经创建了就要重新触发两个生命周期\n  if (component.base) {\n      if (component.componentDidUpdate) { component.componentDidUpdate(); }\n  } else if (component.componentDidMount) {\n      component.componentDidMount()\n  }\n\n  component.base = base;\n  base._component = component;\n}\n\n// 如果当前节点是组件的话\nfunction diffComponent(dom, vnode) {\n  let curDom = dom && dom._component\n  let oldDom = dom\n  // 如果是组件的话，虚拟dom的tag就是组件的构造函数 当前dom与vnode是同一个组件的时候\n  if (curDom && curDom.constructor === vnode.tag) {\n    // 重新赋值props\n    setComponentProps(curDom, vnode.attrs)\n    dom = curDom.base // 最终返回结果\n  } else {\n    // 当前dom与vnode不相等的时\n    // 如果当前节点是组件先取消之前的组件的挂载\n    if (curDom) {\n      unmountComponent(curDom)\n      oldDom = null\n    }\n    // 再挂载对应的组件\n    curDom = createComponent(vnode.tag, vnode.attrs)\n\n    setComponentProps(curDom, vnode.attrs)\n    // 返回处理完的真实dom结构\n    dom = curDom.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      removeNode(oldDom)\n    }\n  }\n  return dom\n}\n\nfunction setAttribute(dom, name, value) {\n  // 如果属性名是className，则改回class\n  if (name === 'className') name = 'class';\n\n  // 如果属性名是onXXX，则是一个事件监听方法\n  if (/on\\w+/.test(name)) {\n      name = name.toLowerCase();\n      dom[name] = value || '';\n  // 如果属性名是style，则更新style对象\n  } else if (name === 'style') {\n      if (!value || typeof value === 'string') {\n          dom.style.cssText = value || '';\n      } else if (value && typeof value === 'object') {\n          for (let name in value) {\n              // 可以通过style={ width: 20 }这种形式来设置样式，可以省略掉单位px\n              dom.style[name] = typeof value[name] === 'number' ? value[name] + 'px' : value[name];\n          }\n      }\n  // 普通属性则直接更新属性\n  } else {\n      if (name in dom) {\n          dom[name] = value || '';\n      }\n      if (value) {\n          dom.setAttribute(name, value);\n      } else {\n          dom.removeAttribute(name, value);\n      }\n  }\n}\n\n// dom是真实dom vnode是虚拟dom\nfunction diffAttributes(dom, vnode) {\n  const old = {} // \n  const attrs = vnode.attrs\n  for (let i = 0; i < dom.attributes.length; i++) {\n    const attr = dom.attributes[i]\n    old[attr.name] = attr.value\n  }\n\n  for(let name in old) {\n    if (!(name in attrs)) {\n      setAttribute(dom, name, undefined)\n    }\n  }\n\n  for(let name in attrs) {\n    if (old[name] !== attrs[name]) {\n      setAttribute(dom, name, attrs[name])\n    }\n  }\n}\n\n// 对比子节点 dom为当前节点 vchildren是新dom树的子节点\nfunction diffChildren(dom, vchildren) {\n  const domChildren = dom.childNodes // 实现预存当前真实节点的子节点\n  console.log(domChildren);\n  const children = []\n  const keyed = {} // 用来保存key和对应dom的一个map\n\n  // 把domChildren中带key的节点和不带key的节点分开\n  if (domChildren.length > 0) {\n    for (let i = 0; i < domChildren.length; i++) {\n        const child = domChildren[i]\n        // 这个key 是自己设置的key eg.在map的时候 把entity的id做key\n        const key = child.key\n        if (key) {\n            keyed[key] = child // 如果存在key就把节点存放到keyMap当中\n        } else {\n            children.push(child) // 把当前子节点存放到chlidren当中\n        }\n    }\n  }\n\n  // 如果虚拟dom的ast存在子节点\n  if (vchildren && vchildren.length > 0) {\n    let min = 0\n    let childrenLen = children.length // 当前子节点个数\n\n    // 遍历计算出来的新的子节点\n    for (let i = 0; i < vchildren.length; i ++) {\n      const vchild = vchildren[i] // 新的子节点\n      const key = vchild.key\n      let child; // 旧的子节点\n      // 这个if else主要目的是找出对应的旧节点 如果不存在对应的旧节点 则为undefined\n      if (key) {\n        // 新节点存在key的时候 直接在keyMap中找出之前对应的值 并清空该值\n        if (keyed[key]) {\n          child = keyed[key]\n          keyed[key] = undefined\n        }\n      } else if (min < childrenLen) {\n        // 新节点不存在key的时候 遍历没有key值的当前节点数组children\n        for(let j = min; j < childrenLen; j++) {\n          let c = children[j]\n          // 判断新子节点是否存在于旧子节点当中 存在旧节点child就赋值并清空数组对应的值\n          if (c && isSameNodeType(c, vchild)) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen-- // 记录数组最大长度 减少遍历长度\n            if (j === min) min++ // 记录起始位置 减少遍历长度\n            break\n          }\n        }\n      }\n      // 对比新旧两个子节点获取最新的节点 child为更新后的新当前节点 有可能部分替换 也有可能创建出一个新节点\n      child = diffNode(child, vchild)\n      // former为旧的当前位置的节点\n      const former = domChildren[i]\n\n      // 这里是在比较子节点变化之后触发重新渲染的关键 如果child == former即没发生变化的话就直接不处理 否则做相应的变化处理\n      if (child && child !== dom && child !== former) {\n        if (!former) {\n          // 当前位置节点为空 直接增加新节点即可\n          dom.appendChild(child)\n        } else if (child === former.nextSibling) {\n          // 如果新节点与旧节点的下一个节点相同 相当于删除旧节点 nextSibling用于获取当前dom节点的下一个节点\n          removeNode(former)\n        } else {\n          // 其他情况下把新节点加到旧节点前面\n          dom.insertBefore(child, former)\n        }\n      }\n    }\n  }\n}\n\nfunction isSameNodeType(dom, vnode) {\n  // vnode是文本节点的时候\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return dom.nodeType === 3\n  }\n  // vnode是正常节点的时候\n  if (typeof vnode.tag === 'string') {\n    return dom.nodeName.toLowerCase() === vnode.tag.toLowerCase()\n  }\n  // vnode是组件的时候\n  return dom && dom._component && dom._component.constructor === vnode.tag\n}\n\nfunction removeNode(dom) {\n  if (dom && dom.parentNode) {\n    dom.parentNode.removeChild(dom)\n  }\n}\n","import { renderComponent } from './diff'\n\nclass Component {\n  constructor(props = {}) {\n    this.state = {}\n    this.props = props\n  }\n\n  setState(stateChange) {\n    Object.assign(this.state, stateChange)\n    renderComponent(this)\n  }\n}\n\nmodule.exports = Component","import Component from './component'\nimport diff from './diff'\n\n// <div className=\"container\">\n//   <h1 title=\"hello\" className=\"a\">hello</h1>\n//   <h1>world</h1>\n// </div>\n\n// 上面的dom经过babel解析之后返回的结果是:\n// React.createElement(\n//     \"div\",\n//     { className: \"container\" },\n//     React.createElement(\n//       \"h1\",\n//       { title: \"hello\", className: \"a\" },\n//       \"hello\"\n//     ),\n//     React.createElement(\n//       \"h1\",\n//       null,\n//       \"world\"\n//     )\n// );\n\n// 所以要实现的是一个React对象，里面有一个createElement的函数，传入的参数是 tagName domAttributes children, 返回加工信息\n\nconst React = {\n    createElement,\n    Component\n}\n\nfunction createElement(tag, attrs, ...children) {\n    return {\n        tag,\n        attrs,\n        children\n    }\n}\n\n// 再来看下react的render..render是从react-dom提取出来的方法 所以要在reactDom中实现一个render函数 render时候就能看到渲染后的html了\n// render的参数有两个 一个是render的vnode（会被babel转化成一个React.createElement的对象） 一个是包容这个vnode的容器\n\nconst reactDom = {\n    render\n}\n\nfunction render(vnode, container, dom) {\n    // 不做比较直接全部重新渲染\n    // return _render(vnode, container)\n\n    // diff计算过后再重新渲染\n    return diff(dom, vnode, container)\n}\n\n// 解析reactDom转换成真实的Dom 这是直接appendChild全部重新渲染的方法\n// function _render(vnode, container) {\n//     console.log(vnode);\n//     // 根据vnode的类型返回不同的渲染结果\n//     if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\n\n//     if (typeof vnode === 'number') vnode = String(vnode);\n\n//     if (typeof vnode === 'string') {\n//         let textNode = document.createTextNode(vnode);\n//         return textNode;\n//     }\n\n//     if (typeof vnode.tag === 'function') {\n//         // TODO 不能全部当成props\n//         const component = createComponent(vnode.tag, vnode.attrs)\n//         setComponentProps(component, vnode.attrs)\n//         return component.base\n//     }\n\n//     const dom = document.createElement(vnode.tag)\n\n//     if (vnode.attrs) {\n//         Object.keys(vnode.attrs).forEach(key => {\n//             const value = vnode.attrs[key]\n//             setAttribute(dom, key, value)\n//         })\n//     }\n\n//     vnode.children.forEach(child => render(child, dom))\n//     return container.appendChild(dom);\n// }\nclass TText extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>test text2</h2>\n                <h2>test text</h2>\n            </div>\n        );\n    }\n}\n\nclass Tbutton extends React.Component {\n    render() {\n        return (\n            <button>add</button>\n        )\n    }\n}\n\nclass Counter extends React.Component {\n    constructor( props ) {\n        super( props );\n        this.state = {\n            num: 0\n        }\n    }\n\n    componentWillUpdate() {\n        console.log( 'update' );\n    }\n\n    componentWillMount() {\n        console.log( 'mount' );\n    }\n\n    onClick() {\n        this.setState( { num: this.state.num + 1 } );\n    }\n\n    render() {\n        return (\n            <div onClick={ () => this.onClick() }>\n                <TText></TText>\n                <h1>number: {this.state.num}</h1>\n                <Tbutton></Tbutton>\n            </div>\n        );\n    }\n}\n\nlet element = <Counter><div>123</div></Counter>\nreactDom.render(\n    element,\n    document.getElementById('root')\n)\n"]}